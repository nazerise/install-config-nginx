#HTTP
server { 
        listen 80;
        server_name {{ nginx_host[item.0] }};
        proxy_buffers 4 256k;	
        proxy_buffer_size 128k;
	proxy_busy_buffers_size 256k;  
        
	location / {
            return 301 https://$host$request_uri;
        }
}

#HTTPS
server {
        listen 443 ssl http2;
        server_name          {{ nginx_host[item.0] }};
	ssl_certificate      /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key  /etc/nginx/certs/privkey.pem;
        ssl_protocols        TLSv1.2 TLSv1.3;
        underscores_in_headers on;
        proxy_buffers 4 256k;	
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 256k;
        include /etc/nginx/mime.types;
	# favicon.ico
        location = /favicon.ico {
                log_not_found off;
                access_log    off;
        }
 
        # robots.txt
        location = /robots.txt {
                log_not_found off;
                access_log    off;
        }

	location / { 
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_pass https://proxy-tls;
                limit_req zone=https-zone burst=60 nodelay;
	 #####Add CORS(Cross-origin resource sharing)##########
  		{% if cors %}
   		add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,PUT' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Cache-Control,Content-Language,Content-Type,Expires,Last-Modified,Pragma' always;
		{% endif %}
        }
}

